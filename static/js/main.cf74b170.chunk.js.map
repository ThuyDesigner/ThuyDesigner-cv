{"version":3,"sources":["component/Alerts/AlertsCommon.js","component/Button/ButtonCommon.js","component/Baget/BagetCommon.js","component/Avata/AvataImg.js","component/Icon/TIcon.js","component/Avata/AvataUser.js","component/Card/CardHeader/Header.js","component/Card/CardBody/Body.js","component/Card/CardFooter/Footer.js","component/Card/Img.js","component/Card/Link.js","component/Card/Card.js","component/ShowItem/ShowItem.js","component/ListCommon/ListCommon.js","IMG/User.png","component/DropDown/DropDownCommon.js","component/Spinners/SpinnersCommon.js","component/InputCommon/InputCommon.js","component/InputCommon/TodoForm.js","App.js","reportWebVitals.js","index.js"],"names":["svgicon","xmlns","width","height","viewBox","fill","stroke","class","x1","y1","x2","y2","getType","typeAlerts","classAlert","AlertsCommon","type","isbtnbutton","children","icon","useState","show","setShow","className","classNames","role","onClick","typeButton","typbtn","valuebtn","getcolor","btnColor","getSize","btnSize","ButtonCommon","variant","size","addClass","isLoading","value","getbgColor","color","BagetCommon","bgColor","isPill","sizeImg","AvataImg","srcImg","isFluid","isRounded","isRoundedCircle","isthumbnai","alt","src","rounded","Ticon","delete","points","d","edit","nav","AvataUser","img","name","info","subInfo","isBaget","isBtnAction","Header","titleBaget","Body","Footer","isButton","btn1","btn2","Img","typeImg","Link","href","Object","assign","ShowItem","directions","id","bgEx","map","direction","ListCommon","titleLists","indexItem","setIndexItem","item","index","myActive","section","toggleClass","title","DropDownCommon","ListItem","nameBtn","isOpen","setIsOpen","refButton","useRef","setWidth","useEffect","console","log","current","clientWidth","ref","style","getColor","selectColor","SpinnersCommon","selectType","InputCommon","ContentLabe","placeholder","onsubmit","setValue","onSubmit","e","preventDefault","for","onChange","target","TodoForm","props","password","setPassword","checkbox","setChecbox","email","defaultProps","App","todoList","setTodoList","imageUser","formValues","newTodo","length","newTodoList","push","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"meAGMA,EACJ,sBACEC,MAAM,6BACNC,MAAM,KACNC,OAAO,KACPC,QAAQ,YACRC,KAAK,OACLC,OAAO,eACP,eAAa,IACb,iBAAe,QACf,kBAAgB,QAChBC,MAAM,oBAVR,UAYE,sBAAMC,GAAG,KAAKC,GAAG,IAAIC,GAAG,IAAIC,GAAG,OAC/B,sBAAMH,GAAG,IAAIC,GAAG,IAAIC,GAAG,KAAKC,GAAG,UAG7BC,EAAU,SAACC,GACf,IAAIC,EAAa,gBACjB,OAAQD,GACN,IAAK,YACHC,EAAa,kBACb,MACF,IAAK,UACHA,EAAa,gBACb,MACF,IAAK,SACHA,EAAa,eACb,MACF,IAAK,UACHA,EAAa,gBACb,MACF,IAAK,OACHA,EAAa,aACb,MACF,IAAK,QACHA,EAAa,cACb,MACF,IAAK,OACHA,EAAa,aAMjB,OAAOA,GA6DMC,EA1DM,SAAC,GAKf,IAAD,IAJJC,YAII,MAJG,GAIH,MAHJC,mBAGI,aAFJC,gBAEI,MAFO,GAEP,MADJC,YACI,MADG,GACH,EACJ,EAAwBC,oBAAS,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAIA,OAAID,EAEA,sBACEE,UAAWC,IACT,iCACAZ,EAAQI,GACR,CAAE,oBAAqBC,GACvB,CAAE,6BAA8BE,IAElCM,KAAK,QAPP,UASGN,EACAD,EACAD,GAcC,sBAAMM,UAAU,cAAhB,SACE,wBACEP,KAAK,SACLT,MAAM,kBACN,kBAAgB,QAChB,aAAW,QACXmB,QApCqB,WAC/BJ,GAAQ,IA8BA,SAOE,sBAAM,cAAY,OAAlB,SAA0BtB,WAQpC,mBAAG0B,QAAS,kBAAMJ,GAAQ,IAA1B,SACE,mBAAGC,UAAU,oBAAb,kCCrGAX,G,YAAU,SAACe,GACf,OAAQA,GACN,IAAK,QACH,MAAO,CAAEC,OAAQ,QAASC,SAAU,gBACtC,IAAK,SACH,MAAO,CAAED,OAAQ,SAAUC,SAAU,iBAGvC,QACE,MAAO,CAAED,OAAQ,SAAUC,SAAU,OAIrCC,EAAW,SAACC,GAChB,OAAQA,GACN,IAAK,UACH,MAAO,cACT,IAAK,kBACH,MAAO,sBACT,IAAK,YACH,MAAO,gBACT,IAAK,oBACH,MAAO,wBACT,IAAK,UACH,MAAO,cACT,IAAK,kBACH,MAAO,sBACT,IAAK,OACH,MAAO,WACT,IAAK,eACH,MAAO,mBACT,IAAK,SACH,MAAO,aACT,IAAK,iBACH,MAAO,qBACT,IAAK,OACH,MAAO,WACT,IAAK,eACH,MAAO,mBACT,IAAK,QACH,MAAO,YACT,IAAK,gBACH,MAAO,oBACT,IAAK,OACH,MAAO,WACT,IAAK,eACH,MAAO,mBACT,QACE,MAAO,KAGPC,EAAU,SAACC,GACf,OAAQA,GACN,IAAK,KACH,MAAO,SACT,IAAK,KACH,MAAO,SACT,QACE,MAAO,KA0CEC,EAvCM,SAAC,GAOf,IAAD,IANJlB,YAMI,MANG,GAMH,MALJmB,eAKI,MALM,GAKN,MAJJjB,gBAII,MAJO,GAIP,MAHJkB,YAGI,MAHG,GAGH,MAFJC,gBAEI,MAFO,GAEP,MADJC,iBACI,SACJ,OACE,8BACGA,EACC,yBACEf,UAAWC,IACTa,EACAP,EAASK,GACT,MACAH,EAAQI,IALZ,UAQE,sBAAMb,UAAU,sCARlB,gBAYA,wBACEP,KAAMJ,EAAQI,GAAMY,OACpBW,MAAO3B,EAAQI,GAAMa,SACrBN,UAAWC,IACTa,EACAP,EAASK,GACT,MACAH,EAAQI,IAPZ,SAUGlB,OC/FLsB,G,MAAa,SAACC,GAClB,OAAQA,GACN,IAAK,UACH,MAAO,aACT,IAAK,YACH,MAAO,eACT,IAAK,UACH,MAAO,aACT,IAAK,SACH,MAAO,YACT,IAAK,UACH,MAAO,aACT,IAAK,OACH,MAAO,UACT,IAAK,QACH,MAAO,WACT,IAAK,OACH,MAAO,UACT,QACE,MAAO,MAsBEC,EAnBK,SAAC,GAKd,IAAD,IAJJC,eAII,MAJM,GAIN,MAHJC,cAGI,SAFJ1B,EAEI,EAFJA,SAEI,IADJmB,gBACI,MADO,GACP,EACJ,OACE,sBACEd,UAAWC,IACT,QACA,CAAE,eAAgBoB,GAClBP,EACAG,EAAWG,IALf,SAQGzB,KCrCDc,G,KAAU,SAACa,GACf,OAAQA,GACN,IAAK,QACH,MAAO,QACT,IAAK,QACH,MAAO,QACT,IAAK,MACH,MAAO,MACT,QACE,MAAO,MAgCEC,EA7BE,SAAC,GAUX,IAAD,IATJC,cASI,MATK,GASL,MARJC,eAQI,aAPJC,iBAOI,aANJC,uBAMI,aALJC,kBAKI,aAJJd,gBAII,MAJO,GAIP,MAHJnC,aAGI,MAHI,GAGJ,MAFJC,cAEI,MAFK,GAEL,MADJiC,YACI,MADG,GACH,EACJ,OACE,qBACEgB,IAAI,GACJC,IAAKN,EACLxB,UAAWC,IACT,cACA,CAAE,YAAawB,GACf,CAAEM,QAASL,GACX,CAAE,iBAAkBC,GACpB,CAAE,gBAAiBC,GACnBd,EACAL,EAAQI,IAEVlC,MAAOA,EACPC,OAAQA,KCYCoD,EAnDD,CACZC,OACE,sBACEvD,MAAM,6BACNC,MAAM,KACNC,OAAO,KACPC,QAAQ,YACRC,KAAK,OACLC,OAAO,eACP,eAAa,IACb,iBAAe,QACf,kBAAgB,QAChBC,MAAM,wBAVR,UAYE,0BAAUkD,OAAO,iBACjB,sBAAMC,EAAE,sFAGZC,KACE,qBACE1D,MAAM,6BACNC,MAAM,KACNC,OAAO,KACPC,QAAQ,YACRC,KAAK,OACLC,OAAO,eACP,eAAa,IACb,iBAAe,QACf,kBAAgB,QAChBC,MAAM,yBAVR,SAYE,sBAAMmD,EAAE,8DAGZE,IACE,qBACE3D,MAAM,6BACNC,MAAM,KACNC,OAAO,KACPC,QAAQ,YACRC,KAAK,OACLC,OAAO,eACP,eAAa,IACb,iBAAe,QACf,kBAAgB,QAChBC,MAAM,yBAVR,SAYE,sBAAMmD,EAAE,iDCECG,EA7CG,SAAC,GAQZ,IAAD,IAPJC,WAOI,MAPE,GAOF,MANJ1B,YAMI,MANG,QAMH,MALJ2B,YAKI,MALG,GAKH,MAJJC,YAII,MAJG,GAIH,MAHJC,eAGI,MAHM,GAGN,MAFJC,eAEI,aADJC,mBACI,SACJ,OACE,sBAAK5C,UAAU,aAAf,UACE,qBAAKA,UAAU,IAAf,SACE,cAAC,EAAD,CAAUwB,OAAQe,EAAK1B,KAAMA,EAAMc,gBAAgB,WAErD,sBAAK3B,UAAU,eAAf,UACE,sBAAKA,UAAU,eAAf,UACGwC,EACAG,GACC,sBAAM3C,UAAU,QAAhB,SACE,cAAC,EAAD,CAAaoB,QAAQ,UAArB,sBAIN,qBAAKpB,UAAU,gBAAf,SACE,iCACG,IACAyC,EAFH,IAES,uCAFT,IAE2BC,UAI9BE,GACC,qBAAK5C,UAAU,8BAAf,SACE,sBAAKA,UAAU,OAAf,UACE,sBAAMP,KAAK,SAAST,MAAM,gCAA1B,SACGgD,EAAMC,SAET,sBAAMxC,KAAK,SAAST,MAAM,8BAA1B,SACGgD,EAAMI,gBCXNS,G,MApBA,SAAC,GAMT,IAdWpD,EAShBE,EAKI,EALJA,SAKI,IAJJmB,gBAII,MAJO,GAIP,MAHJI,aAGI,MAHI,GAGJ,MAFJyB,eAEI,aADJG,kBACI,MADS,GACT,EACJ,OACE,sBACE9C,UAAWC,IAAW,cAAea,GAjBzBrB,EAiB4CyB,EAfrD,SADCzB,EAEG,UAEA,IAYyD,CAAC,8BAA+BkD,IADlG,UAGGhD,EACAgD,GACC,sBAAM3C,UAAU,OAAhB,SACE,cAAC,EAAD,CAAaoB,QAAQ,OAArB,SAA6B0B,WCnBxBC,EALF,SAAC,GAAiC,IAA/BpD,EAA8B,EAA9BA,SAA8B,IAApBmB,gBAAoB,MAAT,GAAS,EAC5C,OACE,qBAAKd,UAAWC,IAAW,YAAca,GAAzC,SAAsDnB,KCc3CqD,EAfA,SAAC,GAAqE,IAAnErD,EAAkE,EAAlEA,SAAkE,IAAxDmB,gBAAwD,MAA7C,GAA6C,MAAzCmC,gBAAyC,aAAvBC,YAAuB,MAAlB,GAAkB,MAAdC,YAAc,MAAT,GAAS,EAClF,OACE,sBAAKnD,UAAWC,IAAW,cAAe,CAAEa,aAA5C,UACGnB,EACAsD,GACC,sBAAKjD,UAAU,MAAf,UACE,qBAAKA,UAAU,WAAf,SAA0B,cAAC,EAAD,CAAcY,QAAQ,UAAUE,SAAS,QAAzC,SAAkDoC,MAC5E,qBAAKlD,UAAU,WAAf,SAA0B,cAAC,EAAD,CAAcY,QAAQ,kBAAkBE,SAAS,QAAjD,SAA0DqC,aC2B/EC,G,MAxBH,SAAC,GAON,IAjBUC,EAiBX,IANJ5D,YAMI,MANG,GAMH,MALJqC,WAKI,MALE,GAKF,MAJJL,eAII,aAHJC,iBAGI,aAFJC,uBAEI,aADJC,kBACI,SACJ,OACE,8BACE,qBACE5B,UAAWC,KArBFoD,EAsBC5D,EAlBT,eAHC4D,EAIG,kBAEA,gBAgBH,CAAE,YAAa5B,GACf,CAAEM,QAASL,GACX,CAAE,iBAAkBC,GACpB,CAAE,gBAAiBC,IAErBE,IAAKA,EACLD,IAAI,mBCxBGyB,EALH,SAAC,GAAqC,IAApC3D,EAAmC,EAAnCA,SAAmC,IAAzBmB,gBAAyB,MAAhB,GAAgB,MAAZyC,YAAY,MAAP,GAAO,EAC7C,OACI,8BAAK,mBAAGA,KAAMA,EAAMvD,UAAWC,IAAW,YAAYa,GAAjD,SAA6DnB,OCW3D6D,SAAOC,QART,SAAC,GAAiC,IAA/B9D,EAA8B,EAA9BA,SAA8B,IAApBmB,gBAAoB,MAAT,GAAS,EAC5C,OAAO,qBAAKd,UAAWC,IAAW,OAAO,YAAa,CAAEa,aAAjD,SAA+DnB,MAOrC,CACjCkD,OAAQA,EACRE,KAAMA,EACNC,OAAQA,EACRI,IAAKA,EACLE,KAAMA,ICMOI,G,YArBE,SAAC,GAA6D,IAAD,EAA1D/D,EAA0D,EAA1DA,SAA0D,IAAhDgE,kBAAgD,MAAnC,GAAmC,MAA/BnB,YAA+B,MAAxB,GAAwB,MAApBoB,UAAoB,MAAjB,GAAiB,MAAbC,YAAa,MAAR,GAAQ,EAC5E,OACE,sBAAK7D,UAAU,uBAAuB4D,GAAIA,EAA1C,UACE,sBAAK5D,UAAU,eAAf,UAIE,qBAAIA,UAAU,GAAd,cAAmBwC,EAAnB,OAJF,OAKGmB,QALH,IAKGA,GALH,UAKGA,EAAYG,WALf,aAKG,OAAAH,GAAkB,SAACI,GAAD,OACjB,2CAEE,sBAAM/D,UAAU,qBAAhB,SAAsC+D,aAI5C,qBAAK/D,UAAWC,IAAW,WAAY,CAAC4D,SAAxC,SACE,qBAAK7D,UAAU,MAAf,SAAsBL,WCwBfqE,G,MA9BI,SAAC,GAAwC,IAAD,IAArCC,kBAAqC,MAAxB,GAAwB,MAApBnD,gBAAoB,MAAT,GAAS,EACzD,EAAkCjB,oBAAU,GAA5C,mBAAOqE,EAAP,KAAkBC,EAAlB,KAMA,OACE,qBAAKnE,UAAWC,IAAW,SAAWa,GAAtC,SACE,oBAAId,UAAU,aAAd,gBAEGiE,QAFH,IAEGA,OAFH,EAEGA,EAAYH,KAAI,SAACM,EAAMC,GAAP,OACf,oBAAkBrE,UAAWC,IAAW,YAAa,CACnDqE,SAAUJ,GAAaG,IADzB,SAIE,oBACErE,UAAU,YACVuD,KAAMa,EAAKG,QACXpE,QAAS,kBAhBD,SAACkE,GACnBF,EAAaE,GAeYG,CAAYH,IAH7B,UAKGD,EAAKxE,KACLwE,EAAKK,UAVDL,EAAKR,aC3BT,MAA0B,iCC4C1Bc,G,MAzCQ,SAAC,GAIjB,IAAD,IAHJC,gBAGI,MAHO,GAGP,MAFJ7D,gBAEI,MAFO,GAEP,MADJ8D,eACI,MADM,mBACN,EACJ,EAA4B/E,oBAAS,GAArC,mBAAOgF,EAAP,KAAeC,EAAf,KAGMC,EAAYC,iBAAO,MACzB,EAA0BnF,mBAAS,IAAnC,mBAAOlB,EAAP,KAAcsG,EAAd,KAMA,OALAC,qBAAU,WACRC,QAAQC,IAAI,oBAAqBL,EAAUM,SAC3CJ,EAASF,EAAUM,QAAQC,eAC1B,IAGD,sBAAKtF,UAAU,WAAf,UACE,wBACEuF,IAAKR,EACL/E,UAAYC,IAAW,uBAAuBa,GAC9CrB,KAAK,SACL,iBAAe,WACfU,QAhBW,kBAAM2E,GAAWD,IAiB5B,gBAAc,QANhB,SAQGD,IAEFC,GACC,oBAAI7E,UAAU,sBAAsBwF,MAAO,CAAE7G,MAAOA,GAApD,gBACGgG,QADH,IACGA,OADH,EACGA,EAAUb,KAAI,SAACM,GAAD,OACb,oBAAmBpE,UAAU,gBAA7B,SACE,mBAAGA,UAAU,gBAAgBuD,KAAK,IAAlC,SACGa,KAFKA,EAAKR,cCrBrB6B,EAAW,SAACC,GAChB,OAAQA,GACN,IAAK,aACH,MAAO,aAeP,QACI,MAAO,eAbb,IAAK,eACH,MAAO,YACT,IAAK,eACH,MAAO,eACT,IAAK,cACH,MAAO,cACT,IAAK,iBACH,MAAO,iBACT,IAAK,YACH,MAAO,YACT,IAAK,aACH,MAAO,eAgBEC,EAXQ,SAAC,GAA8C,IAhCrDC,EAgCoD,IAA3CnG,YAA2C,MAApC,GAAoC,MAAhCyB,aAAgC,MAAxB,GAAwB,MAApBJ,gBAAoB,MAAT,GAAS,EACnE,OACE,qBACEd,UAAWC,IACT,IApCS2F,EAqCDnG,EAjCP,SAHCmG,EAIG,eAEA,kBA8BSH,EAASvE,GACvBJ,MCaO+E,G,MAjDK,SAAC,GASd,IAAD,IARJC,mBAQI,MARU,GAQV,MAPJrG,YAOI,MAPG,GAOH,MANJqB,gBAMI,MANO,GAMP,MALJ8C,UAKI,MALC,GAKD,MAJJmC,mBAII,MAJU,GAIV,MAHJvD,YAGI,MAHG,GAGH,MAFJ3B,YAEI,MAFG,GAEH,MADJoC,gBACI,SACJ,GADI,EADa+C,SAESnG,mBAAS,KAAnC,mBAAOmB,EAAP,KAAciF,EAAd,KAiBA,OACE,uBAAMjH,MAAM,YAAYkH,SAZL,SAACC,GAEpB,GADAA,EAAEC,iBACIpF,EAAN,CAMAiF,EAAS,MAIT,UACE,uBAAOI,IAAI,GAAGrH,MAAM,aAApB,SACG8G,IAEH,uBACErG,KAAMA,EACNO,UAAWC,IAAW,eAAgBa,EAAUD,GAChD+C,GAAIA,EACJmC,YAAaA,EACbvD,KAAMA,EACNxB,MAAOA,EACPsF,SA3BoB,SAACH,GACzBhB,QAAQC,IAAIe,EAAEI,OAAOvF,OACrBiF,EAASE,EAAEI,OAAOvF,UA2BfiC,GACC,cAAC,EAAD,CAAcrC,QAAQ,UAAUnB,KAAK,SAArC,yBCnCR,SAAS+G,EAASC,GAChB,IAAQP,EAAaO,EAAbP,SACR,EAA0BrG,mBAAS,IAAnC,mBAAOmB,EAAP,KAAciF,EAAd,KACA,EAAgCpG,mBAAS,IAAzC,mBAAO6G,EAAP,KAAiBC,EAAjB,KACA,EAA+B9G,mBAAS,IAAxC,mBAAO+G,EAAP,KAAiBC,EAAjB,KA4BA,OACE,uBAAMX,SAlBR,SAAsBC,GAEpBA,EAAEC,iBACGF,GAAalF,IAMlBkF,EALmB,CACjBzB,MAAOzD,EACP0F,SAAUA,EACVE,SAAUA,IAKZX,EAAS,IACTU,EAAY,IACZE,EAAW,MAIX,UACE,sBAAK7G,UAAU,YAAf,UACE,uBAAOqG,IAAI,QAAQrG,UAAU,aAA7B,mBAGA,uBACEA,UAAU,eACV4D,GAAG,QACHmC,YAAY,cACZvD,KAAK,QACL/C,KAAK,QACLuB,MAAOA,EACPsF,SAvCR,SAA2BH,GACzBhB,QAAQC,IAAIe,EAAEI,OAAOvF,OACrBiF,EAASE,EAAEI,OAAOvF,aAwChB,sBAAKhB,UAAU,YAAf,UACE,uBAAOqG,IAAI,MAAMrG,UAAU,aAA3B,sBAGA,uBACEA,UAAU,eACV4D,GAAG,MACHmC,YAAY,iBACZvD,KAAK,OACL/C,KAAK,WACLuB,MAAO0F,EACPJ,SAjDR,SAA4BH,GAC1BhB,QAAQC,IAAIe,EAAEI,OAAOvF,OACrB2F,EAAYR,EAAEI,OAAOO,aAkDnB,sBAAK9G,UAAU,aAAf,UACE,uBACEA,UAAU,mBACVP,KAAK,WACLuB,MAAO4F,EACPhD,GAAG,qBAEL,uBAAO5D,UAAU,mBAAmBqG,IAAI,mBAAxC,iCAIF,wBAAQ5G,KAAK,SAASO,UAAU,kBAAhC,uBA7ENwG,EAASO,aAAe,CACtBb,SAAU,MAmFGM,QCrET/H,G,MACJ,qBACEC,MAAM,6BACNC,MAAM,KACNC,OAAO,KACPE,KAAK,eACLE,MAAM,qDACNH,QAAQ,YACRqB,KAAK,MACL,aAAW,WARb,SAUE,sBAAMiC,EAAE,8PAINI,EACJ,8EACa,SAASyE,IAAO,IAAD,EAC5B,EAAgCnH,mBAAS,CACvC,CAAE+D,GAAI,EAAGa,MAAO,2CAA6BqC,MAAM,gBACnD,CAAElD,GAAI,EAAGa,MAAO,2CAChB,CAAEb,GAAI,EAAGa,MAAO,oDAHlB,mBAAOwC,EAAP,KAAiBC,EAAjB,KAgBA,OACE,qBAAKlH,UAAU,YAAf,SACE,qBAAKA,UAAU,kBAAf,SACE,sBAAKA,UAAU,MAAf,UACE,qBAAKA,UAAU,mCAAf,SACE,cAAC,EAAD,CACEiE,WAAY,CACV,CACEQ,MAAO,eACPF,QAAS,YACT3E,KAAMoC,EAAMK,KAEd,CACEoC,MAAO,eACPF,QAAS,YACT3E,KAAMoC,EAAMK,KAEd,CAAEoC,MAAO,cAAeF,QAAS,YAAa3E,KAAMoC,EAAMK,KAC1D,CACEoC,MAAO,uBACPF,QAAS,YACT3E,KAAMoC,EAAMK,KAEd,CACEoC,MAAO,aACPF,QAAS,YACT3E,KAAMoC,EAAMK,KAEd,CACEoC,MAAO,iBACPF,QAAS,YACT3E,KAAMoC,EAAMK,KAEd,CACEoC,MAAO,iBACPF,QAAS,YACT3E,KAAMoC,EAAMK,MAGhBvB,SAAS,YAGb,sBAAKd,UAAU,kBAAf,UACE,qBAAKA,UAAU,UAAf,SACE,qBAAIA,UAAU,GAAd,UACE,yBADF,2BAMF,eAAC,EAAD,CACEwC,KAAK,iBACLmB,WAAY,CAAC,4DAGbC,GAAG,WALL,UAOG,IACD,sBAAK5D,UAAU,WAAf,UACE,cAAC,EAAD,CACEA,UAAU,OACVN,YAAY,OACZE,KAAMnB,EAHR,SAKE,sBAAKuB,UAAU,MAAf,UACE,gCACE,6CACA,+NAMA,0BAEF,6EAGJ,cAAC,EAAD,CAAcP,KAAK,UAAnB,qCAEF,qBAAKO,UAAU,WAAf,SACE,cAAC,EAAD,CACEA,UAAU,OACVN,YAAY,OACZD,KAAK,YACLG,KAAMnB,EAJR,SAME,iEAKN,eAAC,EAAD,CACE+D,KAAK,iBACLmB,WAAY,CAAC,sGAIbC,GAAG,WANL,UAQE,qBAAK5D,UAAU,OAAf,SACE,eAAC,EAAD,CAAcP,KAAK,SAASmB,QAAQ,kBAApC,UACG,IADH,cAKF,qBAAKZ,UAAU,QAAf,SACE,eAAC,EAAD,CAAcP,KAAK,QAAQqB,SAAS,0BAApC,UACG,IADH,cAKF,qBAAKd,UAAU,QAAf,SACE,eAAC,EAAD,CACEP,KAAK,QACLsB,UAAU,OACVD,SAAS,cAHX,UAKG,IALH,iBAaJ,cAAC,EAAD,CACE0B,KAAK,gBACLmB,WAAY,CAAC,yDAGbC,GAAG,WALL,SAOE,sBAAK5D,UAAU,OAAf,UACE,+CACgB,IACd,cAAC,GAAD,GAAaoB,QAAQ,YAAYC,OAAO,QAAxC,uBAAsD,QAAtD,yCAIF,+CACgB,IACd,cAAC,EAAD,CAAaD,QAAQ,UAArB,2BAON,eAAC,EAAD,CACEoB,KAAK,yBACLmB,WAAY,CAAC,iLAKbC,GAAG,WAPL,UASE,sBAAK5D,UAAU,YAAf,UACE,cAAC,EAAD,CACEwB,OAAQe,EACR1B,KAAK,MACLc,gBAAgB,SAElB,cAAC,EAAD,CAAUH,OAAQe,EAAK1B,KAAK,MAAMe,WAAW,YAE/C,qBAAK5B,UAAU,gBAAf,SACE,cAAC,EAAD,CACEuC,IAAKA,EACLC,KAAK,sBACLC,KAAK,WACLC,QAAQ,MACRE,YAAY,OACZD,QAAQ,WAGZ,qBAAK3C,UAAU,gBAAf,SACE,cAAC,EAAD,CACEuC,IAAKA,EACLC,KAAK,sBACLC,KAAK,WACLC,QAAQ,MACRE,YAAY,OACZD,QAAQ,WAGZ,qBAAK3C,UAAU,gBAAf,SACE,cAAC,EAAD,CACEuC,IAAKA,EACLC,KAAK,sBACLC,KAAK,WACLC,QAAQ,MACRE,YAAY,OACZD,QAAQ,cAMd,eAAC,EAAD,CACEH,KAAK,eACLmB,WAAY,CAAC,4BACbC,GAAG,WAHL,UAKE,qBAAK5D,UAAU,WAAf,SACE,eAAC,EAAD,WACE,cAAC,EAAK6C,OAAN,CAAa/B,SAAS,WAAtB,SACE,cAAC,EAAKsC,IAAN,CACE3D,KAAK,aACLqC,IAAKqF,EACLxF,gBAAgB,WAGpB,eAAC,EAAKoB,KAAN,WACE,oBAAI/D,MAAM,aAAV,iCACA,oBAAGA,MAAM,YAAT,qDAC2B,uBAD3B,2CAE2B,uBAF3B,+CAG+B,uBAH/B,4DAIuC,uBAJvC,yCAQF,cAAC,EAAKgE,OAAN,CACEC,SAAS,OACTC,KAAK,YACLC,KAAK,iBAKX,qBAAKnD,UAAU,WAAf,SACE,eAAC,EAAD,WACE,cAAC,EAAK6C,OAAN,UACE,6CAEF,eAAC,EAAKG,OAAN,WACE,sBAAKhD,UAAU,2BAAf,UACG,IACD,cAAC,EAAKsD,KAAN,CAAWC,KAAK,GAAGzC,SAAS,GAA5B,kCAIF,sBAAKd,UAAU,2BAAf,UACG,IACD,cAAC,EAAKsD,KAAN,CAAWC,KAAK,GAAGzC,SAAS,IAA5B,iEAIF,sBAAKd,UAAU,cAAf,UACG,IACD,cAAC,EAAKsD,KAAN,CAAWC,KAAK,GAAGzC,SAAS,IAA5B,0FAUV,cAAC,EAAD,CACE0B,KAAK,aACLmB,WAAY,CAAC,+DAGbC,GAAG,WALL,SAOE,sBAAK5D,UAAU,MAAf,UACE,sBAAKA,UAAU,WAAf,UACG,IACD,cAAC,EAAD,CACEc,SAAS,WACT8D,QAAQ,iCACRD,SAAU,CAAC,qBAAD,+HASd,sBAAK3E,UAAU,WAAf,UACG,IACD,cAAC,EAAD,CACEc,SAAS,cACT6D,SAAU,CAAC,SAAU,SAAU,eAInC,sBAAK3E,UAAU,WAAf,UACG,IACD,cAAC,EAAD,CACE2E,SAAU,CAAC,SAAU,SAAU,oBAMvC,cAAC,EAAD,CACEnC,KAAK,mBACLmB,WAAY,CAAC,wCACbC,GAAG,WAHL,SAKE,sBAAK5D,UAAU,MAAf,UACE,sBAAMA,UAAU,OAAhB,SACE,cAAC,EAAD,CAAgBP,KAAK,OAAOqB,SAAS,WAEvC,uBAAMd,UAAU,OAAhB,UACG,IACD,cAAC,EAAD,CAAgBP,KAAK,eAEvB,uBAAMO,UAAU,OAAhB,UACG,IACD,cAAC,EAAD,CACEP,KAAK,OACLyB,MAAM,mBAGV,uBAAMlB,UAAU,OAAhB,UACG,IACD,cAAC,EAAD,CACEP,KAAK,UACLyB,MAAM,sBAMd,cAAC,EAAD,CAAUsB,KAAK,kBAAkBmB,WAAY,CAAC,IAAKC,GAAG,WAAtD,SACE,sBAAK5D,UAAU,WAAf,UACE,cAAC,EAAD,CACE8F,YAAY,0BACZC,YAAY,6CACZlF,KAAM,oBAEP,cAAC,EAAD,CACCiF,YAAY,0BACZC,YAAY,6CACZlF,KAAM,GAAGoC,SAAU,SAIrB,cAAC,EAAD,CAAUiD,SAnWxB,SAA8BkB,GAC5BjC,QAAQC,IAAI,gBAAiBgC,GAE7B,IAAMC,EAAO,aACXzD,GAAIqD,EAASK,OAAS,GACnBF,GAECG,EAAW,YAAON,GACxBM,EAAYC,KAAKH,GACjBH,EAAYK,MA2VC,cAAC,EAAD,CAAatD,WAAYgD,EAAUnG,SAAS,YAG7C,cAAC,EAAD,CAAamC,SAAS,wBCpZtC,IAYewE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.cf74b170.chunk.js","sourcesContent":["import \"./AlertsCss.css\";\r\nimport classNames from \"classnames\";\r\nimport { useState } from \"react\";\r\nconst svgicon = (\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    width=\"18\"\r\n    height=\"18\"\r\n    viewBox=\"0 0 24 24\"\r\n    fill=\"none\"\r\n    stroke=\"currentColor\"\r\n    stroke-width=\"2\"\r\n    stroke-linecap=\"round\"\r\n    stroke-linejoin=\"round\"\r\n    class=\"feather feather-x\"\r\n  >\r\n    <line x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\" />\r\n    <line x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\" />\r\n  </svg>\r\n);\r\nconst getType = (typeAlerts) => {\r\n  var classAlert = \"alert-primary\";\r\n  switch (typeAlerts) {\r\n    case \"secondary\":\r\n      classAlert = \"alert-secondary\";\r\n      break;\r\n    case \"success\":\r\n      classAlert = \"alert-success\";\r\n      break;\r\n    case \"danger\":\r\n      classAlert = \"alert-danger\";\r\n      break;\r\n    case \"warning\":\r\n      classAlert = \"alert-warning\";\r\n      break;\r\n    case \"info\":\r\n      classAlert = \"alert-info\";\r\n      break;\r\n    case \"light\":\r\n      classAlert = \"alert-light\";\r\n      break;\r\n    case \"dark\":\r\n      classAlert = \"alert-dark\";\r\n      break;\r\n\r\n    default:\r\n      break;\r\n  }\r\n  return classAlert;\r\n};\r\n\r\nconst AlertsCommon = ({\r\n  type = \"\",\r\n  isbtnbutton = false,\r\n  children = \"\",\r\n  icon = \"\"\r\n}) => {\r\n  const [show, setShow] = useState(true);\r\n  const handleOnClickCloseButton = () => {\r\n    setShow(false);\r\n  };\r\n  if (show) {\r\n    return (\r\n      <div\r\n        className={classNames(\r\n          \"alert d-flex align-self-center\",\r\n          getType(type),\r\n          { \"alert-dismissible\": isbtnbutton },\r\n          { \" d-flex align-items-center\": icon }\r\n        )}\r\n        role=\"alert\"\r\n      >\r\n        {icon}\r\n        {children}\r\n        {isbtnbutton && (\r\n          //-----------btn-close nomarl\r\n          // <div className=\"btn-close-x col align-self-center\">\r\n          //   <button\r\n          //     type=\"button\"\r\n          //     class=\"icon-close\"\r\n          //     data-bs-dismiss=\"alert\"\r\n          //     aria-label=\"Close\"\r\n          //     onClick={handleOnClickCloseButton}\r\n          //   >\r\n          //     <span aria-hidden=\"true\">{svgicon}</span>\r\n          //   </button>\r\n          // </div>\r\n          //-----------btn-close other\r\n          <span className=\"close-other\">\r\n            <button\r\n              type=\"button\"\r\n              class=\"btn-close-other\"\r\n              data-bs-dismiss=\"alert\"\r\n              aria-label=\"Close\"\r\n              onClick={handleOnClickCloseButton}\r\n            >\r\n              <span aria-hidden=\"true\">{svgicon}</span>\r\n            </button>\r\n          </span>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <p onClick={() => setShow(true)}>\r\n      <p className=\"show-notification\">Show notification</p>\r\n    </p>\r\n  );\r\n};\r\nexport default AlertsCommon;\r\n","import { Children } from \"react\";\r\nimport \"./ButtonCss.css\";\r\nimport classNames from \"classnames\";\r\n\r\nconst getType = (typeButton) => {\r\n  switch (typeButton) {\r\n    case \"reset\":\r\n      return { typbtn: \"reset\", valuebtn: \"Reset Button\" };\r\n    case \"submit\":\r\n      return { typbtn: \"submit\", valuebtn: \"Submit Button\" };\r\n    case \"button\":\r\n      return { typbtn: \"button\", valuebtn: \"\" };\r\n    default:\r\n      return { typbtn: \"button\", valuebtn: \"\" };\r\n  }\r\n};\r\n\r\nconst getcolor = (btnColor) => {\r\n  switch (btnColor) {\r\n    case \"primary\":\r\n      return \"btn-primary\";\r\n    case \"outline-primary\":\r\n      return \"btn-outline-primary\";\r\n    case \"secondary\":\r\n      return \"btn-secondary\";\r\n    case \"outline-secondary\":\r\n      return \"btn-outline-secondary\";\r\n    case \"success\":\r\n      return \"btn-success\";\r\n    case \"outline-success\":\r\n      return \"btn-outline-success\";\r\n    case \"info\":\r\n      return \"btn-info\";\r\n    case \"outline-info\":\r\n      return \"btn-outline-info\";\r\n    case \"danger\":\r\n      return \"btn-danger\";\r\n    case \"outline-danger\":\r\n      return \"btn-outline-danger\";\r\n    case \"dark\":\r\n      return \"btn-dark\";\r\n    case \"outline-dark\":\r\n      return \"btn-outline-dark\";\r\n    case \"light\":\r\n      return \"btn-light\";\r\n    case \"outline-light\":\r\n      return \"btn-outline-light\";\r\n    case \"link\":\r\n      return \"btn-link\";\r\n    case \"outline-link\":\r\n      return \"btn-outline-link\";\r\n    default:\r\n      return \"\";\r\n  }\r\n};\r\nconst getSize = (btnSize) => {\r\n  switch (btnSize) {\r\n    case \"lg\":\r\n      return \"btn-lg\";\r\n    case \"sm\":\r\n      return \"btn-sm\";\r\n    default:\r\n      return \"\";\r\n  }\r\n};\r\nconst ButtonCommon = ({\r\n  type = \"\",\r\n  variant = \"\",\r\n  children = \"\",\r\n  size = \"\",\r\n  addClass = \"\",\r\n  isLoading = false\r\n}) => {\r\n  return (\r\n    <div>\r\n      {isLoading ? (\r\n        <button\r\n          className={classNames(\r\n            addClass,\r\n            getcolor(variant),\r\n            \"btn\",\r\n            getSize(size)\r\n          )}\r\n        >\r\n          <span className=\"spinner-border spinner-border-sm \"></span>\r\n          Loading...\r\n        </button>\r\n      ) : (\r\n        <button\r\n          type={getType(type).typbtn}\r\n          value={getType(type).valuebtn}\r\n          className={classNames(\r\n            addClass,\r\n            getcolor(variant),\r\n            \"btn\",\r\n            getSize(size)\r\n          )}\r\n        >\r\n          {children}\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default ButtonCommon;\r\n","import { Children } from \"react\";\r\nimport \"./BagetCss.css\";\r\nimport classNames from \"classnames\";\r\nconst getbgColor = (color) => {\r\n  switch (color) {\r\n    case \"primary\":\r\n      return \"bg-primary\";\r\n    case \"secondary\":\r\n      return \"bg-secondary\";\r\n    case \"success\":\r\n      return \"bg-success\";\r\n    case \"danger\":\r\n      return \"bg-danger\";\r\n    case \"warning\":\r\n      return \"bg-warning\";\r\n    case \"info\":\r\n      return \"bg-info\";\r\n    case \"light\":\r\n      return \"bg-light\";\r\n    case \"dark\":\r\n      return \"bg-dark\";\r\n    default:\r\n      return \"\";\r\n  }\r\n};\r\nconst BagetCommon = ({\r\n  bgColor = \"\",\r\n  isPill = false,\r\n  children,\r\n  addClass = \"\"\r\n}) => {\r\n  return (\r\n    <span\r\n      className={classNames(\r\n        \"badge\",\r\n        { \"rounded-pill\": isPill },\r\n        addClass,\r\n        getbgColor(bgColor)\r\n      )}\r\n    >\r\n      {children}\r\n    </span>\r\n  );\r\n};\r\nexport default BagetCommon;\r\n","import { Children } from \"react\";\r\nimport \"./Avata.css\";\r\nimport classNames from \"classnames\";\r\nconst getSize = (sizeImg) => {\r\n  switch (sizeImg) {\r\n    case \"small\":\r\n      return \"small\";\r\n    case \"nomal\":\r\n      return \"nomal\";\r\n    case \"big\":\r\n      return \"big\";\r\n    default:\r\n      return \"\";\r\n  }\r\n};\r\nconst AvataImg = ({\r\n  srcImg = \"\",\r\n  isFluid = false,\r\n  isRounded = false,\r\n  isRoundedCircle = false,\r\n  isthumbnai = false,\r\n  addClass = \"\",\r\n  width = \"\",\r\n  height = \"\",\r\n  size = \"\"\r\n}) => {\r\n  return (\r\n    <img\r\n      alt=\"\"\r\n      src={srcImg}\r\n      className={classNames(\r\n        \"float-start\",\r\n        { \"img-fluid\": isFluid },\r\n        { rounded: isRounded },\r\n        { \"rounded-circle\": isRoundedCircle },\r\n        { \"img-thumbnail\": isthumbnai },\r\n        addClass,\r\n        getSize(size)\r\n      )}\r\n      width={width}\r\n      height={height}\r\n    ></img>\r\n  );\r\n};\r\nexport default AvataImg;\r\n","import React from \"react\";\r\nconst Ticon = {\r\n  delete: (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"16\"\r\n      height=\"16\"\r\n      viewBox=\"0 0 24 24\"\r\n      fill=\"none\"\r\n      stroke=\"currentColor\"\r\n      stroke-width=\"2\"\r\n      stroke-linecap=\"round\"\r\n      stroke-linejoin=\"round\"\r\n      class=\"feather feather-trash\"\r\n    >\r\n      <polyline points=\"3 6 5 6 21 6\" />\r\n      <path d=\"M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2\" />\r\n    </svg>\r\n  ),\r\n  edit: (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"16\"\r\n      height=\"16\"\r\n      viewBox=\"0 0 24 24\"\r\n      fill=\"none\"\r\n      stroke=\"currentColor\"\r\n      stroke-width=\"2\"\r\n      stroke-linecap=\"round\"\r\n      stroke-linejoin=\"round\"\r\n      class=\"feather feather-edit-2\"\r\n    >\r\n      <path d=\"M17 3a2.828 2.828 0 1 1 4 4L7.5 20.5 2 22l1.5-5.5L17 3z\" />\r\n    </svg>\r\n  ),\r\n  nav: (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"24\"\r\n      height=\"24\"\r\n      viewBox=\"0 0 24 24\"\r\n      fill=\"none\"\r\n      stroke=\"currentColor\"\r\n      stroke-width=\"2\"\r\n      stroke-linecap=\"round\"\r\n      stroke-linejoin=\"round\"\r\n      class=\"feather feather-twitch\"\r\n    >\r\n      <path d=\"M21 2H3v16h5v4l4-4h5l4-4V2zm-10 9V7m5 4V7\" />\r\n    </svg>\r\n  ),\r\n};\r\nexport default Ticon;\r\n","import { Children } from \"react\";\r\nimport \"./Avata.css\";\r\nimport AvataImg from \"./AvataImg\";\r\nimport BagetCommon from \"../Baget/BagetCommon\";\r\nimport Ticon from \"../Icon/TIcon\";\r\nconst AvataUser = ({\r\n  img = \"\",\r\n  size = \"nomal\",\r\n  name = \"\",\r\n  info = \"\",\r\n  subInfo = \"\",\r\n  isBaget = false,\r\n  isBtnAction = false\r\n}) => {\r\n  return (\r\n    <div className=\"avata-user\">\r\n      <div className=\" \">\r\n        <AvataImg srcImg={img} size={size} isRoundedCircle=\"true\"></AvataImg>\r\n      </div>\r\n      <div className=\"body-avata  \">\r\n        <div className=\"title-avata \">\r\n          {name}\r\n          {isBaget && (\r\n            <span className=\"px-2 \">\r\n              <BagetCommon bgColor=\"primary\">New</BagetCommon>\r\n            </span>\r\n          )}\r\n        </div>\r\n        <div className=\"sub-info pt-0\">\r\n          <span>\r\n            {\" \"}\r\n            {info} <span> - </span> {subInfo}\r\n          </span>\r\n        </div>\r\n      </div>\r\n      {isBtnAction && (\r\n        <div className=\" d-flex align-items-center \">\r\n          <div className=\"row \">\r\n            <span type=\"button\" class=\" col px-2 action-icon-delete \">\r\n              {Ticon.delete}\r\n            </span>\r\n            <span type=\"button\" class=\" col  px-2 action-icon-edit\">\r\n              {Ticon.edit}\r\n            </span>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default AvataUser;\r\n","import classNames from \"classnames\";\r\nimport BagetCommon from \"../../Baget/BagetCommon\";\r\nimport \"./header.css\";\r\nconst getColor = (type) => {\r\n  switch (type) {\r\n    case \"blue\":\r\n      return \"bg-blue\";\r\n    default:\r\n      return \"\";\r\n  }\r\n};\r\nconst Header = ({\r\n  children,\r\n  addClass = \"\",\r\n  color = \"\",\r\n  isBaget = false,\r\n  titleBaget = \"\",\r\n}) => {\r\n  return (\r\n    <div\r\n      className={classNames(\"card-header\", addClass, getColor(color), {\"d-flex  align-items-center \": isBaget,})}\r\n    >\r\n      {children}\r\n      {isBaget && (\r\n        <span className=\"ps-2\">\r\n          <BagetCommon bgColor=\"dark\">{titleBaget}</BagetCommon>\r\n        </span>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default Header;\r\n","import classNames from \"classnames\";\r\nconst Body = ({ children, addClass = \"\" }) => {\r\n  return (\r\n    <div className={classNames(\"card-body\",  addClass )}>{children}</div>\r\n  );\r\n};\r\nexport default Body;\r\n","import classNames from \"classnames\";\r\nimport ButtonCommon from \"../../Button/ButtonCommon\";\r\nconst Footer = ({ children, addClass = \"\", isButton = false, btn1=\"\", btn2=\"\" }) => {\r\n  return (\r\n    <div className={classNames(\"card-footer\", { addClass })}>\r\n      {children}\r\n      {isButton && (\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6\"><ButtonCommon variant=\"primary\" addClass=\"w-100\">{btn1}</ButtonCommon></div>\r\n          <div className=\"col-md-6\"><ButtonCommon variant=\"outline-primary\" addClass=\"w-100\">{btn2}</ButtonCommon></div>\r\n          \r\n          \r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default Footer;\r\n","import classNames from \"classnames\";\r\n\r\nconst getType = (typeImg) => {\r\n  switch (typeImg) {\r\n    case \"img-top\":\r\n      return \"card-img-top\";\r\n    case \"img-bottom\":\r\n      return \"card-img-bottom\";\r\n    default:\r\n      return \"card-img-top\";\r\n  }\r\n};\r\nconst Img = ({\r\n  type = \"\",\r\n  src = \"\",\r\n  isFluid = false,\r\n  isRounded = false,\r\n  isRoundedCircle = false,\r\n  isthumbnai = false,\r\n}) => {\r\n  return (\r\n    <div>\r\n      <img\r\n        className={classNames(\r\n          getType(type),\r\n          { \"img-fluid\": isFluid },\r\n          { rounded: isRounded },\r\n          { \"rounded-circle\": isRoundedCircle },\r\n          { \"img-thumbnail\": isthumbnai }\r\n        )}\r\n        src={src}\r\n        alt=\"Card image\"\r\n      ></img>\r\n    </div>\r\n  );\r\n};\r\nexport default Img;\r\n","import classNames from \"classnames\";\r\n\r\nconst Link =({children, addClass=\"\", href=\"\"}) =>{\r\n    return(\r\n        <div><a href={href} className={classNames(\"card-link\",addClass)}>{children}</a></div>\r\n    )\r\n}\r\nexport default Link;","import classNames from \"classnames\";\r\nimport Header from \"./CardHeader/Header\";\r\nimport Body from \"./CardBody/Body\";\r\nimport Footer from \"./CardFooter/Footer\";\r\nimport \"./Card.css\";\r\nimport Img from \"./Img\";\r\nimport Link from \"./Link\";\r\nconst Card = ({ children, addClass = \"\" }) => {\r\n  return <div className={classNames(\"card\",\"no-gutter\", { addClass })}>{children}</div>;\r\n};\r\n\r\n// Card.Header = Header;\r\n// Card.Body = Body;\r\n// Card.Footer = Footer;\r\n// export default Card;\r\nexport default Object.assign(Card, {\r\n  Header: Header,\r\n  Body: Body,\r\n  Footer: Footer,\r\n  Img: Img ,\r\n  Link: Link\r\n});\r\n","import classNames from \"classnames\";\r\nimport { Children } from \"react\";\r\nimport BagetCommon from \"../Baget/BagetCommon\";\r\nimport \"./Show.css\";\r\n\r\nconst ShowItem = ({ children, directions = [], name = \"\" ,id=\"\", bgEx=\"\"}) => {\r\n  return (\r\n    <div className=\"show-component mt-5 \" id={id}>\r\n      <div className=\" title  col \">\r\n        {/* <BagetCommon bgColor=\"secondary\" isPill=\"true\" isPill=\"true\">\r\n          Component\r\n        </BagetCommon> */}\r\n        <h2 className=\"\"> {name} </h2>\r\n        {directions?.map?.((direction) => (\r\n          <h6>\r\n            Direction\r\n            <span className=\"txt-secondary px-2\">{direction}</span>\r\n          </h6>\r\n        ))}\r\n      </div>\r\n      <div className={classNames(\"example \" ,{bgEx})}>\r\n        <div className=\"row\">{children}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default ShowItem;\r\n","import \"./List.css\";\r\nimport classNames from \"classnames\";\r\nimport React, { useState } from \"react\";\r\n{/**\r\n  titleLists=[{\r\n  title: \"AlertsCommon\",\r\n  section: \"#section1\",\r\n  icon: Ticon.nav,\r\n},\r\n{\r\n  title: \"ButtonCommon\",\r\n  section: \"#section2\",\r\n  icon: Ticon.nav,\r\n}]\r\n*/}\r\nconst ListCommon = ({ titleLists = [], addClass = \"\" }) => {\r\n  const [indexItem, setIndexItem] = useState(-1);\r\n  // get position of item clicked\r\n  const toggleClass = (index) => {\r\n    setIndexItem(index);\r\n  };\r\n\r\n  return (\r\n    <nav className={classNames(\"navbar\",  addClass)}>\r\n      <ul className=\"navbar-nav\">\r\n        {/* item: item. index: position of item */}\r\n        {titleLists?.map((item, index) => (\r\n          <li key={item.id} className={classNames(\"nav-item \" ,{\r\n            myActive: indexItem == index,\r\n            // compare position of item clicked with position currently\r\n          })}>\r\n            <a\r\n              className=\"nav-link \"\r\n              href={item.section}\r\n              onClick={() => toggleClass(index)}\r\n            >\r\n              {item.icon}\r\n              {item.title}\r\n            </a>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\nexport default ListCommon;\r\n","export default __webpack_public_path__ + \"static/media/User.18c02b5d.png\";","import classNames from \"classnames\";\r\nimport \"./Drop.css\";\r\nimport React, { useState, useEffect, useRef } from \"react\";\r\nconst DropDownCommon = ({\r\n  ListItem = [],\r\n  addClass = \"\",\r\n  nameBtn = \" Dropdown button\",\r\n}) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const toggling = () => setIsOpen(!isOpen);\r\n  // get width button\r\n  const refButton = useRef(null);\r\n  const [width, setWidth] = useState(20);\r\n  useEffect(() => {\r\n    console.log(\"refButton.current\", refButton.current);\r\n    setWidth(refButton.current.clientWidth);// get width of button and set width for list item\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"dropdown\">\r\n      <button\r\n        ref={refButton}\r\n        className= {classNames(\"btn  dropdown-toggle\",addClass)}\r\n        type=\"button\"\r\n        data-bs-toggle=\"dropdown\"\r\n        onClick={toggling}\r\n        aria-expanded=\"false\"\r\n      >\r\n        {nameBtn}\r\n      </button>\r\n      {isOpen && (\r\n        <ul className=\"dropdown-menu show \" style={{ width: width }}>\r\n          {ListItem?.map((item) => (\r\n            <li key= {item.id} className=\"border-bottom\">\r\n              <a className=\"dropdown-item\" href=\"#\">\r\n                {item}\r\n              </a>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default DropDownCommon;\r\n","import classNames from \"classnames\";\r\n\r\nconst getType = (selectType) => {\r\n  switch (selectType) {\r\n    case \"border\":\r\n      return \"spinner-border\";\r\n    case \"grow\":\r\n      return \"spinner-grow\";\r\n    default:\r\n      return \"spinner-border\";\r\n  }\r\n};\r\nconst getColor = (selectColor) => {\r\n  switch (selectColor) {\r\n    case \"text-muted\":\r\n      return \"text-muted\";\r\n    case \"text-primary\":\r\n      return \"text-primary\";\r\n    case \"text-success\":\r\n      return \"text-info\";\r\n    case \"text-warning\":\r\n      return \"text-warning\";\r\n    case \"text-danger\":\r\n      return \"text-danger\";\r\n    case \"text-secondary\":\r\n      return \"text-secondary\";\r\n    case \"text-dark\":\r\n      return \"text-dark\";\r\n    case \"text-light\":\r\n      return \"text-light\";\r\n      default:\r\n          return \"text-primary\"\r\n  }\r\n};\r\nconst SpinnersCommon = ({ type = \"\", color = \"\", addClass = \"\" }) => {\r\n  return (\r\n    <div\r\n      className={classNames(\r\n        \"\",\r\n        getType(type),getColor(color),\r\n        addClass\r\n      )}\r\n    ></div>\r\n  );\r\n};\r\nexport default SpinnersCommon;\r\n","import classNames from \"classnames\";\r\nimport ButtonCommon from \"../Button/ButtonCommon\";\r\nimport React, { useState } from \"react\";\r\n\r\nconst InputCommon = ({\r\n  ContentLabe = \"\",\r\n  type = \"\",\r\n  addClass = \"\",\r\n  id = \"\",\r\n  placeholder = \"\",\r\n  name = \"\",\r\n  size = \"\",\r\n  isButton = false,onsubmit\r\n}) => {\r\n  const [value, setValue] = useState(\"\");\r\n  \r\n  const handleValueChange = (e) => {\r\n    console.log(e.target.value);\r\n    setValue(e.target.value);\r\n  };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if ( !value) return;\r\n    const formValues = {\r\n      value: value,\r\n    };\r\n    // onsubmit(formValues);\r\n    //  reset form\r\n    setValue(\"\");\r\n    // console.log(value)\r\n  };\r\n  return (\r\n    <form class=\"mb-3 mt-3\" onSubmit={handleSubmit}>\r\n      <label for=\"\" class=\"form-label\">\r\n        {ContentLabe}\r\n      </label>\r\n      <input\r\n        type={type}\r\n        className={classNames(\"form-control\", addClass, size)}\r\n        id={id}\r\n        placeholder={placeholder}\r\n        name={name}\r\n        value={value}\r\n        onChange={handleValueChange}\r\n      ></input>\r\n      {isButton && (\r\n        <ButtonCommon variant=\"primary\" type=\"submit\">\r\n          Submit\r\n        </ButtonCommon>\r\n      )}\r\n    </form>\r\n  );\r\n};\r\nexport default InputCommon;\r\n","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nTodoForm.propTypes = {\r\n  onSubmit: PropTypes.func,\r\n};\r\n\r\nTodoForm.defaultProps = {\r\n  onSubmit: null,\r\n};\r\n\r\nfunction TodoForm(props) {\r\n  const { onSubmit } = props;\r\n  const [value, setValue] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [checkbox, setChecbox] = useState(\"\");\r\n\r\n  function handleValueChange(e) {\r\n    console.log(e.target.value);\r\n    setValue(e.target.value);\r\n  }\r\n  function handleValueChange2(e) {\r\n    console.log(e.target.value);\r\n    setPassword(e.target.email);\r\n  }\r\n\r\n  function handleSubmit(e) {\r\n    // Prevent reloading browser\r\n    e.preventDefault();\r\n    if (!onSubmit || !value) return;\r\n    const formValues = {\r\n      title: value,\r\n      password: password,\r\n      checkbox: checkbox\r\n    };\r\n    onSubmit(formValues);\r\n\r\n    // Reset form\r\n    setValue(\"\");\r\n    setPassword(\"\");\r\n    setChecbox(\"\");\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div className=\"mb-3 mt-3\">\r\n        <label for=\"email\" className=\"form-label\">\r\n          Email\r\n        </label>\r\n        <input\r\n          className=\"form-control\"\r\n          id=\"email\"\r\n          placeholder=\"Enter email\"\r\n          name=\"email\"\r\n          type=\"email\"\r\n          value={value}\r\n          onChange={handleValueChange}\r\n        ></input>\r\n      </div>\r\n      <div className=\"mb-3 mt-3\">\r\n        <label for=\"pwd\" className=\"form-label\">\r\n          Password\r\n        </label>\r\n        <input\r\n          className=\"form-control\"\r\n          id=\"pwd\"\r\n          placeholder=\"Enter Password\"\r\n          name=\"pswd\"\r\n          type=\"password\"\r\n          value={password}\r\n          onChange={handleValueChange2}\r\n        ></input>\r\n      </div>\r\n      <div className=\"form-check\">\r\n        <input\r\n          className=\"form-check-input\"\r\n          type=\"checkbox\"\r\n          value={checkbox}\r\n          id=\"flexCheckDefault\"\r\n        ></input>\r\n        <label className=\"form-check-label\" for=\"flexCheckDefault\">\r\n          Default checkbox\r\n        </label>\r\n      </div>\r\n      <button type=\"submit\" className=\"btn btn-primary\">\r\n        Submit\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default TodoForm;\r\n","import \"./styles.css\";\nimport AlertsCommon from \"./component/Alerts/AlertsCommon\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport ButtonCommon from \"./component/Button/ButtonCommon\";\nimport BagetCommon from \"./component/Baget/BagetCommon\";\nimport AvataImg from \"./component/Avata/AvataImg\";\nimport AvataUser from \"./component/Avata/AvataUser\";\nimport Card from \"./component/Card/Card\";\nimport \"./App.css\";\nimport Ticon from \"./component/Icon/TIcon\";\nimport ShowItem from \"./component/ShowItem/ShowItem\";\nimport ListCommon from \"./component/ListCommon/ListCommon\";\nimport Img from \"./component/Card/Img\";\nimport imageUser from \"./IMG/User.png\";\nimport DropDownCommon from \"./component/DropDown/DropDownCommon\";\nimport SpinnersCommon from \"./component/Spinners/SpinnersCommon\";\nimport TooltipCommon from \"./component/Tooltip/TooltipCommon\";\nimport InputCommon from \"./component/InputCommon/InputCommon\";\nimport TodoForm from \"./component/InputCommon/TodoForm\";\nimport React, { useState, useEffect } from 'react';\nimport queryString from 'query-string';\nimport Checkbox from \"./component/InputCommon/Checkbox\";\nconst svgicon = (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"24\"\n    height=\"24\"\n    fill=\"currentColor\"\n    class=\"bi bi-exclamation-triangle-fill flex-shrink-0 me-3\"\n    viewBox=\"0 0 16 16\"\n    role=\"img\"\n    aria-label=\"Warning:\"\n  >\n    <path d=\"M8.982 1.566a1.13 1.13 0 0 0-1.96 0L.165 13.233c-.457.778.091 1.767.98 1.767h13.713c.889 0 1.438-.99.98-1.767L8.982 1.566zM8 5c.535 0 .954.462.9.995l-.35 3.507a.552.552 0 0 1-1.1 0L7.1 5.995A.905.905 0 0 1 8 5zm.002 6a1 1 0 1 1 0 2 1 1 0 0 1 0-2z\" />\n  </svg>\n);\n\nconst img =\n  \"https://image.thanhnien.vn/1080/uploaded/haoph/2021_03_06/img_0467_lsvb.jpg\";\nexport default function App() {\n  const [todoList, setTodoList] = useState([\n    { id: 1, title: 'Hi, I’m @ThuyDesigner  😍', email:'ngthithuthuy' },\n    { id: 2, title: 'I’m interested in ... 🥰' },\n    { id: 3, title: 'I’m looking to collaborate on🚀' },\n  ]);\n  function handleTodoFormSubmit(formValues) {\n    console.log('Form submit: ', formValues);\n    // add new todo to current todo list\n    const newTodo = {\n      id: todoList.length + 1,\n      ...formValues,\n    };\n    const newTodoList = [...todoList];\n    newTodoList.push(newTodo);\n    setTodoList(newTodoList);\n  };\n  return (\n    <div className=\"bg-light \">\n      <div className=\"container-fluid\">\n        <div className=\"row\">\n          <div className=\" tab-selection bg-dark  col-md-2\">\n            <ListCommon\n              titleLists={[\n                {\n                  title: \"AlertsCommon\",\n                  section: \"#section1\",\n                  icon: Ticon.nav,\n                },\n                {\n                  title: \"ButtonCommon\",\n                  section: \"#section2\",\n                  icon: Ticon.nav,\n                },\n                { title: \"BagetCommon\", section: \"#section3\", icon: Ticon.nav },\n                {\n                  title: \"AvataUser & AvataImg\",\n                  section: \"#section4\",\n                  icon: Ticon.nav,\n                },\n                {\n                  title: \"CardCommon\",\n                  section: \"#section5\",\n                  icon: Ticon.nav,\n                },\n                {\n                  title: \"DropdownCommon\",\n                  section: \"#section6\",\n                  icon: Ticon.nav,\n                },\n                {\n                  title: \"SpinnersCommon\",\n                  section: \"#section7\",\n                  icon: Ticon.nav,\n                },\n              ]}\n              addClass=\"fixed\"\n            ></ListCommon>\n          </div>\n          <div className=\" col-md-10 App \">\n            <div className=\"fix-top\">\n              <h1 className=\"\">\n                <span></span> Show all component\n              </h1>\n            </div>\n\n            {/*this is Alerts  */}\n            <ShowItem\n              name=\"1.AlertsCommon\"\n              directions={[\n                `type = \"\", isbtnbutton = false, children = \"\", icon = \"\"`,\n              ]}\n              id=\"section1\"\n            >\n              {\" \"}\n              <div className=\"col-md-6\">\n                <AlertsCommon\n                  className=\"pd-2\"\n                  isbtnbutton=\"true\"\n                  icon={svgicon}\n                >\n                  <div className=\"row\">\n                    <div>\n                      <h1>Well done! </h1>\n                      <h6>\n                        Aww yeah, you successfully read this important alert\n                        message. This example text is going to run a bit longer\n                        so that you can see how spacing within an alert works\n                        with this kind of content.\n                      </h6>\n                      <hr></hr>\n                    </div>\n                    <div>An example success alert with an icon</div>\n                  </div>\n                </AlertsCommon>\n                <AlertsCommon type=\"warning\">This is AlertsCommon</AlertsCommon>\n              </div>\n              <div className=\"col-md-6\">\n                <AlertsCommon\n                  className=\"pd-2\"\n                  isbtnbutton=\"true\"\n                  type=\"secondary\"\n                  icon={svgicon}\n                >\n                  <h2>This is Baget Secondary </h2>\n                </AlertsCommon>\n              </div>\n            </ShowItem>\n            {/*this is Button   */}\n            <ShowItem\n              name=\"2.ButtonCommon\"\n              directions={[\n                `type = \"\", variant = \"\", children = \"\", size = \"\", addClass\n              = \"\", isLoading = false`,\n              ]}\n              id=\"section2\"\n            >\n              <div className=\" p-3\">\n                <ButtonCommon type=\"submit\" variant=\"outline-primary\">\n                  {\" \"}\n                  button\n                </ButtonCommon>\n              </div>\n              <div className=\" p-3 \">\n                <ButtonCommon type=\"buton\" addClass=\"btn-outline-secondary  \">\n                  {\" \"}\n                  button\n                </ButtonCommon>\n              </div>\n              <div className=\"  p-3\">\n                <ButtonCommon\n                  type=\"buton\"\n                  isLoading=\"true\"\n                  addClass=\"btn-primary\"\n                >\n                  {\" \"}\n                  button\n                </ButtonCommon>\n              </div>\n            </ShowItem>\n\n            {/*this is Baget */}\n\n            <ShowItem\n              name=\"3.BagetCommon\"\n              directions={[\n                `bgColor = \"\", isPill = false, children, addClass = \"\"`,\n              ]}\n              id=\"section3\"\n            >\n              <div className=\" p-3\">\n                <h5>\n                  this is baget{\" \"}\n                  <BagetCommon bgColor=\"secondary\" isPill=\"true\" isPill=\"true\">\n                    hello\n                  </BagetCommon>\n                </h5>\n                <h1>\n                  this is baget{\" \"}\n                  <BagetCommon bgColor=\"warning\">hello</BagetCommon>\n                </h1>\n              </div>\n            </ShowItem>\n\n            {/*this is Avata */}\n\n            <ShowItem\n              name=\"4.AvataUser & AvataImg\"\n              directions={[\n                `srcImg = \"\", isFluid = false, isRounded = false,\n              isRoundedCircle = false, isthumbnai = false, addClass = \"\",\n              width = \"\", height = \"\", size = \"\"`,\n              ]}\n              id=\"section4\"\n            >\n              <div className=\"col-md-12\">\n                <AvataImg\n                  srcImg={img}\n                  size=\"big\"\n                  isRoundedCircle=\"true\"\n                ></AvataImg>\n                <AvataImg srcImg={img} size=\"big\" isthumbnai=\"true\"></AvataImg>\n              </div>\n              <div className=\" p-3 col-md-4\">\n                <AvataUser\n                  img={img}\n                  name=\"Nguyen Thi Thu Thuy\"\n                  info=\"Designer\"\n                  subInfo=\"CRM\"\n                  isBtnAction=\"TRUE\"\n                  isBaget=\"true\"\n                ></AvataUser>\n              </div>\n              <div className=\" p-3 col-md-4\">\n                <AvataUser\n                  img={img}\n                  name=\"Nguyen Thi Thu Thuy\"\n                  info=\"Designer\"\n                  subInfo=\"CRM\"\n                  isBtnAction=\"TRUE\"\n                  isBaget=\"true\"\n                ></AvataUser>\n              </div>\n              <div className=\" p-3 col-md-4\">\n                <AvataUser\n                  img={img}\n                  name=\"Nguyen Thi Thu Thuy\"\n                  info=\"Designer\"\n                  subInfo=\"CRM\"\n                  isBtnAction=\"TRUE\"\n                  isBaget=\"true\"\n                ></AvataUser>\n              </div>\n            </ShowItem>\n\n            {/*this is Card */}\n            <ShowItem\n              name=\"5.CardCommon\"\n              directions={[`children, addClass = \"\" `]}\n              id=\"section5\"\n            >\n              <div className=\"col-md-2\">\n                <Card>\n                  <Card.Header addClass=\"bg-white\">\n                    <Card.Img\n                      type=\"img-bottom\"\n                      src={imageUser}\n                      isRoundedCircle=\"true\"\n                    ></Card.Img>\n                  </Card.Header>\n                  <Card.Body>\n                    <h3 class=\"card-title\">Nguyen Thi Thu Thuy</h3>\n                    <p class=\"card-text\">\n                      👋 Hi, I’m @ThuyDesigner <br></br>\n                      👀 I’m interested in ... <br></br>\n                      🌱 I’m currently learning ...<br></br>\n                      💞️ I’m looking to collaborate on... <br></br>\n                      📫 How to reach me ...\n                    </p>\n                  </Card.Body>\n                  <Card.Footer\n                    isButton=\"true\"\n                    btn1=\"Read more\"\n                    btn2=\"Contact\"\n                  ></Card.Footer>\n                </Card>\n              </div>\n              {/* test using card  */}\n              <div className=\"col-md-2\">\n                <Card>\n                  <Card.Header>\n                    <h2>Help desk</h2>\n                  </Card.Header>\n                  <Card.Footer>\n                    <div className=\"border-bottom w-100 pb-2\">\n                      {\" \"}\n                      <Card.Link href=\"\" addClass=\"\">\n                        What do you want?\n                      </Card.Link>\n                    </div>\n                    <div className=\"border-bottom w-100 pb-2\">\n                      {\" \"}\n                      <Card.Link href=\"\" addClass=\" \">\n                        What’s your favorite thing you own and why?\n                      </Card.Link>\n                    </div>\n                    <div className=\" w-100 pb-2\">\n                      {\" \"}\n                      <Card.Link href=\"\" addClass=\" \">\n                        How do you like to be comforted when you’re sad or\n                        upset?\n                      </Card.Link>\n                    </div>\n                  </Card.Footer>\n                </Card>\n              </div>\n            </ShowItem>\n            {/*Drop down  */}\n            <ShowItem\n              name=\"6.Dropdown\"\n              directions={[\n                `ListItem = [], addClass = \"\", nameBtn = \" Dropdown button\",`,\n              ]}\n              id=\"section6\"\n            >\n              <div className=\"row\">\n                <div className=\"col-md-4\">\n                  {\" \"}\n                  <DropDownCommon\n                    addClass=\"btn-info\"\n                    nameBtn=\"Click me to see special thing!\"\n                    ListItem={[\n                      `\"Bad Blood\" (2014)`,\n                      `\"Santa Baby\" (2007)`,\n                      `\"A Place in This World\" (2006)`,\n                      `\n                    \"Christmas Must Be Something More\" (2007)`,\n                    ]}\n                  ></DropDownCommon>\n                </div>\n                <div className=\"col-md-4\">\n                  {\" \"}\n                  <DropDownCommon\n                    addClass=\"btn-primary\"\n                    ListItem={[\"list 1\", \"list 2\", \"list 3\"]}\n                  ></DropDownCommon>\n                </div>\n\n                <div className=\"col-md-4\">\n                  {\" \"}\n                  <DropDownCommon\n                    ListItem={[\"list 1\", \"list 2\", \"list 3\"]}\n                  ></DropDownCommon>\n                </div>\n              </div>\n            </ShowItem>\n            {/*spinner  */}\n            <ShowItem\n              name=\"7.SpinnersCommon\"\n              directions={[`type = \"\", color = \"\", addClass = \"\"`]}\n              id=\"section7\"\n            >\n              <div className=\"col\">\n                <span className=\"pe-2\">\n                  <SpinnersCommon type=\"grow\" addClass=\"pd-2\"></SpinnersCommon>\n                </span>\n                <span className=\"pe-2\">\n                  {\" \"}\n                  <SpinnersCommon type=\"spinner\"></SpinnersCommon>\n                </span>\n                <span className=\"pe-2\">\n                  {\" \"}\n                  <SpinnersCommon\n                    type=\"grow\"\n                    color=\"text-danger\"\n                  ></SpinnersCommon>\n                </span>\n                <span className=\"pe-2\">\n                  {\" \"}\n                  <SpinnersCommon\n                    type=\"spinner\"\n                    color=\"text-dark\"\n                  ></SpinnersCommon>\n                </span>\n              </div>\n            </ShowItem>\n            {/*tooltip  */}\n            <ShowItem name=\"8.TooltipCommon\" directions={[``]} id=\"section7\">\n              <div className=\"col-md-3\">\n                <InputCommon\n                  ContentLabe=\"Your name or your email\"\n                  placeholder=\"Please add your name or your email in here\"\n                  size =\"form-control-lg\"\n                ></InputCommon>\n                 <InputCommon\n                  ContentLabe=\"Your name or your email\"\n                  placeholder=\"Please add your name or your email in here\"\n                  size =\"\" isButton =\"true\"\n                ></InputCommon>\n               \n                \n                <TodoForm onSubmit={handleTodoFormSubmit}></TodoForm>\n                 <ListCommon  titleLists={todoList} addClass=\"bg-dark\">\n\n                </ListCommon>\n                <InputCommon isButton=\"true\"></InputCommon>\n              </div>\n            </ShowItem>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}